c
paginator.render
c
paginator.render
Paginator
paginator.count
c
Project.includes(:project_type).search()
Project.includes(:project_type).search
Project.includes(:project_type).all
c
params[:q]
c
project_params
params[:q]
c
params[project_params]
params[:entity_id]
project_params
:project_params
c
self.class.model_name.singular
request_form.request_type.kind
request_form_request_type.kind
c
 RequestType.where(kind: RequestType.kinds[self.class.model_name.singular.camelize]).take
RequestType.where(kind: RequestType.kind[self.class.model_name.singular.camelize]).take
RequestType.where(kind: RequestType.kinds[self.class.model_name.singular.camelize]).take
self.class.model_name.singular.camelize
self.class.model_name.singular
self.class.model_name.camelize
self.class.model_name.singular
RequestType.where(kind: RequestType.kinds[self.class.model_name.singular]).take
c
self.request_form
self.request_form.type
self.rt_extendable.type
c
request_form.request_type
c
params[:entity_id]
c
@rt_project_unsubscribe.project.name
c
@rt_project_unsubscribe.project.name
c
@rt_project_unsubscribe.project
c
params[:my_param]
c
params[:id]
c
params[:project]
c
params[:entity_id]
params[:current_user.id]
params[:id]
c
params[:id]
c
configure_permitted_parameters
:configure_permitted_parameters
configure_permitted_parameters
c
@resource
c
User.find_by_id (current_user.id) 
User.find (params[:id]) 
c
Volunteer.includes(:address).find_by_id(current_user.profileable_id).address.road_type_id
Volunteer.includes(:address).find_by_id(current_user.profileable_id)
User.includes(:address).find_by_id(current_user.id).profileable
User.find_by_id(current_user.id).profileable.includes(:address)
User.find_by_id(current_user.id).profileable
@rt_volunteer_amendment
c
current_user
c
session.warden.user.user.key
session
User.find(session[:user_id])
current_user
CURRENT_USER
c
:user
request_path
c
current_user
current_user.id
c
RequestForm
self.RequestForm
self.request_form
c
send(kind).take
send(RtEntitySubscribe).take
send(RtEntitySubscribe)
RtEntitySubscribe
kind
c
self.rt_extendable_type
self.rt_entity_subscribe
c
:rt_extendable
send(kind)
kind
c
to_s
RtEntitySubscribe.request_reason_id
RtEntitySubscribe
request_reason_id:
:request_reason_id:
:request_reason_id
self.request_reason_id
request_reason_id
c
flash[:notice]c
flash[:notice]
notice:
alert:
alert
c
@rt_volunteer_subscribe.errors.messages
@rt_volunteer_subscribe.errors
c
rt_volunteer_suscribe_params[:email]
c
rt_volunteer_subscribe_params[:email]
rt_volunteer_subscribe_params[:id]
rt_subscribe_params[:id]
c
params[:id]
@rt_volunteer_subscribe
c
@rt_volunteer_subscribe
params[:id]
c
params[:id]
@rt_volunteer_subscribe
@rt_volunteer_subscribes
@rt_volunteer_subscribe
params[:email]
params[:emails]
c
:email
params[:emails]
params[:email]
c
params[:email]
:email
User.where(email: :email).count
c
@rt_volunteer_subscribe
c
@request_form.rt_extendable
c
@request_form.rt_extendable
c
@request_form.rt_extendable_type
@request_form.rt_extendable_id
@request_form.rt_extendable
c
@request_form
@request_form.rt_extendable
c
@request_form.rt_extendable
@request_form
c
@request_form.rt_extendable
c
RequestType.where(kind: RequestType.kinds[@rt_extension]).take
c
params[:rt_extension]
c
@request_form
rt_extendable
c
@request_form.rt_extendable
@request_form
c
self.rt_extendable
c
@request_form.rt_extendable
c
c 
c
@request_form
c
self.rt_extendable
c
@request_form
c
request_type.kind.classify.constantize
rt_extendable.try(:class)
self.rt_extendable
rt_extension_kind.to_s.in? RequestType.rt_extension_tables
rt_extension_kind.to_s.in?
c
@rt_extension
c
@request_form
@request_form.rt_extendable
rt_extendable
c
request_type.kind.classify.constantize
c
@request_form.request_type
RequestType.where(kind: RequestType.kinds[@rt_extension]).take
c
RequestType.where(kind: RequestType.kinds[@rt_extension]).take
@request_form.request_type_id
c
RequestType.kind.classify.constantize
request_type_id.kind.classify.constantize
request_type.kind.classify.constantize
:class
rt_extendable.try(:class)
c
RequestType.where(kind: RequestType.kinds[@rt_extension]).take
c
RequestType.where(kind: RequestType.kinds[@rt_extension]).take
RequestType.kinds[@rt_extension]
RequestType.where(kind: RequestType.kinds[@rt_extension]).take
c
params[:rt_extension]
c
request_form
c
request_form
request_form_id
c
@rft_volunteer_subscribe.request_form_id
c
@rft_volunteer_subscribe
c
@rft_volunteer_subscribe.build_request_form
@rft_volunteer_subscribe.request_form.build
request_form_type_id
@rft_volunteer_subscribe.request_form
@rft_volunteer_subscribe.request_forms
@rft_volunteer_subscribe.request_form
@rft_volunteer_subscribe
c
request_form
request_form_type_id
c
 self.request_form_type_id ||= request_form.try(:request_form_type_id) || get_related_request_form_type.id
c
kind
c
request_form
request_form_type_id
c
send(kind).take
c
send(kind).take
