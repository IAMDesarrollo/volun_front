c
flash[:notice]c
flash[:notice]
notice:
alert:
alert
c
@rt_volunteer_subscribe.errors.messages
@rt_volunteer_subscribe.errors
c
rt_volunteer_suscribe_params[:email]
c
rt_volunteer_subscribe_params[:email]
rt_volunteer_subscribe_params[:id]
rt_subscribe_params[:id]
c
params[:id]
@rt_volunteer_subscribe
c
@rt_volunteer_subscribe
params[:id]
c
params[:id]
@rt_volunteer_subscribe
@rt_volunteer_subscribes
@rt_volunteer_subscribe
params[:email]
params[:emails]
c
:email
params[:emails]
params[:email]
c
params[:email]
:email
User.where(email: :email).count
c
@rt_volunteer_subscribe
c
@request_form.rt_extendable
c
@request_form.rt_extendable
c
@request_form.rt_extendable_type
@request_form.rt_extendable_id
@request_form.rt_extendable
c
@request_form
@request_form.rt_extendable
c
@request_form.rt_extendable
@request_form
c
@request_form.rt_extendable
c
RequestType.where(kind: RequestType.kinds[@rt_extension]).take
c
params[:rt_extension]
c
@request_form
rt_extendable
c
@request_form.rt_extendable
@request_form
c
self.rt_extendable
c
@request_form.rt_extendable
c
c 
c
@request_form
c
self.rt_extendable
c
@request_form
c
request_type.kind.classify.constantize
rt_extendable.try(:class)
self.rt_extendable
rt_extension_kind.to_s.in? RequestType.rt_extension_tables
rt_extension_kind.to_s.in?
c
@rt_extension
c
@request_form
@request_form.rt_extendable
rt_extendable
c
request_type.kind.classify.constantize
c
@request_form.request_type
RequestType.where(kind: RequestType.kinds[@rt_extension]).take
c
RequestType.where(kind: RequestType.kinds[@rt_extension]).take
@request_form.request_type_id
c
RequestType.kind.classify.constantize
request_type_id.kind.classify.constantize
request_type.kind.classify.constantize
:class
rt_extendable.try(:class)
c
RequestType.where(kind: RequestType.kinds[@rt_extension]).take
c
RequestType.where(kind: RequestType.kinds[@rt_extension]).take
RequestType.kinds[@rt_extension]
RequestType.where(kind: RequestType.kinds[@rt_extension]).take
c
params[:rt_extension]
c
request_form
c
request_form
request_form_id
c
@rft_volunteer_subscribe.request_form_id
c
@rft_volunteer_subscribe
c
@rft_volunteer_subscribe.build_request_form
@rft_volunteer_subscribe.request_form.build
request_form_type_id
@rft_volunteer_subscribe.request_form
@rft_volunteer_subscribe.request_forms
@rft_volunteer_subscribe.request_form
@rft_volunteer_subscribe
c
request_form
request_form_type_id
c
 self.request_form_type_id ||= request_form.try(:request_form_type_id) || get_related_request_form_type.id
c
kind
c
request_form
request_form_type_id
c
send(kind).take
c
send(kind).take
kind
c
kind
c
kind
c
kind
c
model_name.singular.sub(/rft_/,'')
c
@projects_actives
c
@projects_actives.find(1).addressesc
c
@projects_actives.find(1).addresses
@projects_actives
c
@projects_actives
@addresses
c
@projects_actives.find(1).addresses.count
@projects_actives.find(1).addresses
@projects_actives.find(1).address
c
@projects_actives.addresses
c
@projects_actives.timetables
c
Project.includes(:addresses, :districts, :timetables, :project_type).find(1)
Project.includes(:addresses).find(1)
Project.find(1).includes(:addresses)
Project.find(1).include(:addresses)
Project.find(1).addresses
Project.find(1)
Project
@projects_actives.addresses
@projects_actives
c
@projects_actives
c
@projects_actives
c
@projects_actives
@projects_actives.list
@projects.list
c
+c
c
@search.result
@search
c
@search.list
@search
c
